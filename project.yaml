version: '3.0'

expectations:
  population_size: 1000

actions:

  generate_study_population:
    run: cohortextractor:latest generate_cohort --study-definition study_definition --index-date-range "2019-09-01 to 2021-07-01 by month" --skip-existing
    outputs:
      highly_sensitive:
        cohort: output/input_*.csv

  generate_study_egfr:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_egfr --index-date-range "2019-09-01 to 2021-07-01 by month" --skip-existing
    outputs:
      highly_sensitive:
        cohort: output/input_egfr_*.csv
  
  test_indicator_g:
    run: python:latest python analysis/test_indicator_g.py
    needs: [generate_study_population]
    outputs:
      moderately_sensitive:
        csv: output/indicator_g_matching.csv
        
  check_EGFR:
    run: python:latest python analysis/check_EGFR.py
    needs: [generate_study_egfr]
    outputs:
      moderately_sensitive:
        boxplots: output/BOXPLOT_*.png
        histograms: output/HISTOGRAM_*.png
        counts: output/CROSSTAB_*.csv

  generate_study_population_ethnicity:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_ethnicity
    outputs:
      highly_sensitive:
        cohort: output/input_ethnicity.csv
      
  join_ethnicity_region:
    run: python:latest python analysis/join_ethnicity_region.py
    needs: [generate_study_population, generate_study_population_ethnicity]
    outputs:
      highly_sensitive:
        cohort: output/input*.csv

  calculate_numerators:
    run: python:latest python analysis/calculate_numerators.py
    needs: [join_ethnicity_region]
    outputs:
      highly_sensitive:
        cohort: output/inpu*.csv

  calculate_composite_indicators:
    run: python:latest python analysis/composite_indicators.py
    needs: [calculate_numerators]
    outputs:
      moderately_sensitive:
        counts: output/*_composite_measure.csv

  generate_measures:
    run: cohortextractor:latest generate_measures --study-definition study_definition --output-dir=output
    needs: [calculate_numerators]
    outputs:
        moderately_sensitive:
          measure_csv: output/measure_*_rate.csv

  generate_study_asthma:
    run: cohortextractor:latest generate_cohort --study-definition study_definition_asthma --index-date-range "2019-09-01 to 2021-07-01 by month" --skip-existing
    outputs:
      highly_sensitive:
        cohort: output/input_asthma_*.csv
  
  generate_measures_asthma:
    run: cohortextractor:latest generate_measures --study-definition study_definition_asthma --output-dir=output
    needs: [generate_study_asthma]
    outputs:
        moderately_sensitive:
          measure_csv: output/measure_no_asthma_resolved_rate.csv
  
  check_asthma:
    run: python:latest python analysis/check_asthma.py
    needs: [generate_measures, generate_measures_asthma]
    outputs:
      moderately_sensitive:
        csv: output/asthma_sum.csv
  
  generate_measures_demographics:
    run: python:latest python analysis/calculate_measures.py
    needs: [calculate_numerators]
    outputs:
      moderately_sensitive:
        counts: output/indicator_measure_*.csv
  
  generate_plots:
    run: python:latest python analysis/plot_measures.py
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      moderately_sensitive:
        counts: output/plot_*.jpeg
  
  indicator_saturation_a:
    run: python:latest analysis/indicator_saturation_analysis.py a
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*
  
  indicator_saturation_b:
    run: python:latest analysis/indicator_saturation_analysis.py b
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*
  
  indicator_saturation_c:
    run: python:latest analysis/indicator_saturation_analysis.py c
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_d:
    run: python:latest analysis/indicator_saturation_analysis.py d
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_e:
    run: python:latest analysis/indicator_saturation_analysis.py e
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_f:
    run: python:latest analysis/indicator_saturation_analysis.py f
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_g:
    run: python:latest analysis/indicator_saturation_analysis.py g
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_i:
    run: python:latest analysis/indicator_saturation_analysis.py i
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_k:
    run: python:latest analysis/indicator_saturation_analysis.py k
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_ac:
    run: python:latest analysis/indicator_saturation_analysis.py ac
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_me_no_fbc:
    run: python:latest analysis/indicator_saturation_analysis.py me_no_fbc
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_me_no_lft:
    run: python:latest analysis/indicator_saturation_analysis.py me_no_lft
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_me_no_li:
    run: python:latest analysis/indicator_saturation_analysis.py li
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  indicator_saturation_am:
    run: python:latest analysis/indicator_saturation_analysis.py am
    needs: [generate_measures, generate_measures_demographics, calculate_composite_indicators]
    outputs:
      highly_sensitive:
        indicator_saturation: output/indicator_saturation_*

  # --------------------------------------------------------------------------------------
  # Something like this should be included when we have defined an indicator saturation
  # collection script that combines all the indicator saturation analysis output for 
  # all the indicators. Not all indicators may need to be combined - any that do not
  # need to be combined should be removed from the 'run' and 'needs' specifications below.
  # --------------------------------------------------------------------------------------
  # combine_indicator_saturation_data:
  #   run: python: latest analysis/combine_saturation_analyses.py a b c d e f g i k ac me_no_fbc me_no_lft li am
  #   needs: [indicator_saturation_a indicator_saturation_b indicator_saturation_c indicator_saturation_d indicator_saturation_e indicator_saturation_f indicator_saturation_g indicator_saturation_i indicator_saturation_k indicator_saturation_ac indicator_saturation_me_no_fbc indicator_saturation_me_no_lft indicator_saturation_li indicator_saturation_am]
  #   outputs:
  #     highly_sensitive:
  #       compiled_indicator_saturation: output/compiled_indicator_saturation
  
  generate_notebook:
    run: jupyter:latest jupyter nbconvert /workspace/analysis/report.ipynb --execute --to html --template basic --output-dir=/workspace/output --ExecutePreprocessor.timeout=86400 --no-input
    needs: [generate_plots]
    outputs:
      moderately_sensitive:
        notebook: output/report.html
  
  run_tests:
    run: python:latest python -m pytest --junit-xml=output/pytest.xml --verbose
    outputs:
      moderately_sensitive:
        log: output/pytest.xml

